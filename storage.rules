rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Match the "WebsiteElements" folder
    match /WebsiteElements/{allWebSiteElementsPaths=**} {
      allow read: if true;
      allow write: if false; // Explicitly deny writes
    }

    // Match the "profileImages" folder
    match /profileImages/{userId}/{allProfileImagePaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Match the "postThumbnails" folder
    match /postThumbnails/{userId}/{postId}/{allPostThumbnailPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Match the "postContentImages" folder
    match /postContentImages/{userId}/{postId}/{allPostContentImagePaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Fallback for any other paths - explicitly deny if not matched above.
    // Uncomment this if you want a strict fallback rule.
    // match /{allOtherPaths=**} {
    //   allow read: if false;
    //   allow write: if false;
    // }
  }
}
