rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o { // This matches all objects in the bucket

    // Rule for files within the "Website Elements" folder.
    // Example: gs://<bucket>/Website Elements/font.woff
    match "Website Elements/{filePath=**}" { // Path segment directly, quoted
      allow read: if true;
      allow write: if false; // Explicitly deny writes to these public assets
    }

    // Profile images:
    // Example: gs://<bucket>/profileImages/user123/profile.jpg
    match "profileImages/{userId}/{filePath=**}" { // Path segment directly
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Post thumbnails:
    // Example: gs://<bucket>/postThumbnails/user123/postABC/thumb.png
    match "postThumbnails/{userId}/{postId}/{filePath=**}" { // Path segment directly
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Images uploaded within post content (Quill):
    // Example: gs://<bucket>/postContentImages/user123/postABC/image.png
    match "postContentImages/{userId}/{postId}/{filePath=**}" { // Path segment directly
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Access is denied by default if no rule matches a path.
  }
}
